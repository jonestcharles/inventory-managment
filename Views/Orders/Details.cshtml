@model InventoryManagement.Models.Order

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Order</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OrderNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OrderNumber)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateOrdered)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateOrdered)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CustomerName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CustomerName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CustomerAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CustomerAddress)
        </dd>
    </dl>
    <table>
        <tr id="headers">
            <th>
                Product
            </th>
            <th>
                Quantity
            </th>
        </tr>
        @foreach (OrderLine line in Model.OrderLines)
        {
            await Html.RenderPartialAsync("OrderLineDetails", line);
        }
    </table>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.OrderID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
